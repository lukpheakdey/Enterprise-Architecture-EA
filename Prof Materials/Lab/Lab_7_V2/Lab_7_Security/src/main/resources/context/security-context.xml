<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=" 
	   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" >
<!-- 	<security:expression-handler ref="methodExpressionHandler"/> -->
 	</security:global-method-security>
  
 <!-- Database security -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider  user-service-ref="jdbcDaoImpl">
			<security:password-encoder hash="bcrypt" />               
		</security:authentication-provider>
	</security:authentication-manager>

<bean id="jdbcDaoImpl" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
    <property name="enableGroups" value="true" />
    <property name="enableAuthorities" value="false" />
    <property name="dataSource" ref="dataSource" />
   <property name="usersByUsernameQuery" value="select user,password,enabled from authentication where user=?" />
   <property name="groupAuthoritiesByUsernameQuery" value="select g.id, g.group_name, a.authority
                               from GroupsToo g, GroupsToo_authentication gc, GroupsToo_authority ga, authority a
                                where gc.userCredentials_USER = ? and g.id = ga.GroupsToo_id and g.id = gc.GroupsToo_id
                                and ga.authority_id = a.id" />
    
</bean> 


</beans>
