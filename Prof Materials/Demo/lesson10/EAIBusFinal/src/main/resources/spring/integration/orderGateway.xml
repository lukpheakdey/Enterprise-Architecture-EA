<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:http="http://www.springframework.org/schema/integration/http"
	xmlns:mail="http://www.springframework.org/schema/integration/mail"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration.xsd
			http://www.springframework.org/schema/integration/http 
			http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
  			http://www.springframework.org/schema/integration/mail
    		http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
 			http://www.springframework.org/schema/integration/amqp 
 				http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
    		http://www.springframework.org/schema/integration/jms
			http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
			http://www.springframework.org/schema/integration/stream
			http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">

 
     <gateway id="order" service-interface="edu.mum.integration.OrderGateway"
			 default-request-channel="processOrder"/>
 
	<channel id="processOrder" />

  <!-- "ref" refers to custom Router:ordeRouter "method" is the message channel -->
 	<router input-channel="processOrder" ref="orderRouter" method="processOrder"/>

	<channel id="pickupProcess" />

<recipient-list-router id="customerRouter" input-channel="pickupProcess" >
  <recipient channel="pickupOrder"/>
  <recipient channel="mailChannel"/>
</recipient-list-router>

	<channel id="pickupOrder" />
	<channel id="deliveryOrder" />

    <channel id="warehouseDelivery"/>
    <channel id="albiaPickup"/>
    <channel id="bataviaPickup"/>

<!-- bridge between Direct channel &  JMS outbound channel-->
   <!--  <bridge input-channel="pickupOrder" output-channel="albiaPickup" /> -->
    <bridge input-channel="deliveryOrder" output-channel="warehouseDelivery" />
 
 	<router input-channel="pickupOrder" ref="storeRouter" method="determineStore"/>
 
 
	<jms:outbound-channel-adapter id="jmsoutBatavia" channel="bataviaPickup" destination="bataviaQueue"/>
	<jms:outbound-channel-adapter id="jmsoutAlbia" channel="albiaPickup" destination="albiaQueue"/>
	<jms:outbound-channel-adapter id="jmsoutWarehouse" channel="warehouseDelivery" destination="warehouseQueue"/>

	<!--  -->
	<chain input-channel="mailChannel">
 	    <service-activator id="emailActivator" ref="emailService"/>
	    <mail:outbound-channel-adapter id="emailSender" mail-sender="mailSender" />
	</chain>
	
		<channel id="fromAmqpOrder" />
 	<amqp:inbound-channel-adapter channel="fromAmqpOrder"
		queue-names="purchasesPhone" connection-factory="amqpConnectionFactory" />
 		<bridge input-channel='fromAmqpOrder' output-channel='transformOrder' />

    <transformer id="OrdertransformRoute" ref="orderTransformer"  input-channel="transformOrder" output-channel="transformedOrder" />
 	<beans:bean id="orderTransformer" class="edu.mum.integration.OrderTransformerImpl" />

	<http:inbound-channel-adapter  path="/onlineOrder"
		channel="onlineOrder" status-code-expression="T(org.springframework.http.HttpStatus).NO_CONTENT"
		supported-methods="POST" 
		request-payload-type="edu.mum.domain.Order">

		<http:request-mapping consumes="application/json" />
	</http:inbound-channel-adapter>

<!--  	<channel id="fromOnline"/>
 
	<service-activator ref="onlineOrderService" method="post" 
	       input-channel="fromOnline" output-channel="onlineOrder" />
 --> 
 		<channel id="onlineOrder"/>

 		<bridge input-channel='onlineOrder' output-channel='transformOrder' />
 		 		


<!-- input order && transformedOrder need to go to JMS -->
<bridge input-channel='transformedOrder' output-channel='warehouseDelivery'/>
	
	
</beans:beans>
