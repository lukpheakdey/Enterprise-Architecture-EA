<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=" 
	   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--  Enable Authorization Annotations -->
 	<security:global-method-security pre-post-annotations="enabled"  >
	</security:global-method-security>
 
 
 <!-- Database security "custom queries are because we have used our own schema...	-->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from credentials where username=?"
				authorities-by-username-query="select u1.username, u2.authority from credentials u1, authority u2 where u1.username = u2.username and u1.username =?" />
		</security:authentication-provider>
	</security:authentication-manager>

<!-- In memory -->
<!-- 	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
 			<security:user-service>
				<security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
				<security:user name="guest" password="guest" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
 -->
</beans>
